Source: coreroller
Maintainer: Christian Pointner <cpointner@mgit.at>
Build-Depends: debhelper (>= 9.0.0), dh-systemd  (>= 1.5), git, nodejs-legacy, npm
Standards-Version: 3.9.6
Priority: extra
Section: admin

Package: coreroller
Priority: extra
Architecture: all
Depends: ${misc:Depends}, coreroller-rollerd, coreroller-frontend
Description: Set of tools to control and monitor the rollout of your updates
 CoreRoller is a set of tools to control and monitor the rollout of your
 updates. It's aimed to be an open source alternative to CoreOS CoreUpdate.
 .
 Features
  - Dashboard to control and monitor your applications updates
  - Manage updates for your own applications, not just for CoreOS
  - Define your own groups and channels, even for the CoreOS application
    (pre-installed)
  - Define roll-out policies per group, controlling how updates should be
    applied to a set of instances
  - Pause/resume updates at any time at the group level
  - Statistics about versions installed in your instances, updates progress
    status, etc
  - Activity stream to get notified about important events or errors
  - Manage updates for your CoreOS clusters out of the box
  - HTTP Restful and Golang APIs
  - Based on the Omaha protocol developed by Google
  - Backend server built using Golang, dashboard built using React
 .
 This is a virtual package that installs rollerd and the web frontend.

Package: coreroller-rollerd
Priority: extra
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}
Suggests: coreroller-frontend
Description: Set of tools to control and monitor the rollout of your updates
 CoreRoller is a set of tools to control and monitor the rollout of your
 updates. It's aimed to be an open source alternative to CoreOS CoreUpdate.
 .
 Features
  - Dashboard to control and monitor your applications updates
  - Manage updates for your own applications, not just for CoreOS
  - Define your own groups and channels, even for the CoreOS application
    (pre-installed)
  - Define roll-out policies per group, controlling how updates should be
    applied to a set of instances
  - Pause/resume updates at any time at the group level
  - Statistics about versions installed in your instances, updates progress
    status, etc
  - Activity stream to get notified about important events or errors
  - Manage updates for your CoreOS clusters out of the box
  - HTTP Restful and Golang APIs
  - Based on the Omaha protocol developed by Google
  - Backend server built using Golang, dashboard built using React
 .
 This package contains rollerd the backend server for coreroller.

Package: coreroller-frontend
Priority: extra
Architecture: all
Depends: ${misc:Depends}, coreroller-rollerd
Description: Set of tools to control and monitor the rollout of your updates
 CoreRoller is a set of tools to control and monitor the rollout of your
 updates. It's aimed to be an open source alternative to CoreOS CoreUpdate.
 .
 Features
  - Dashboard to control and monitor your applications updates
  - Manage updates for your own applications, not just for CoreOS
  - Define your own groups and channels, even for the CoreOS application
    (pre-installed)
  - Define roll-out policies per group, controlling how updates should be
    applied to a set of instances
  - Pause/resume updates at any time at the group level
  - Statistics about versions installed in your instances, updates progress
    status, etc
  - Activity stream to get notified about important events or errors
  - Manage updates for your CoreOS clusters out of the box
  - HTTP Restful and Golang APIs
  - Based on the Omaha protocol developed by Google
  - Backend server built using Golang, dashboard built using React
 .
 This package contains the web frontend for coreroller.
